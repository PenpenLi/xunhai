<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="400" height="300">
	
	<fx:Script>
		<![CDATA[
			import com.cc.app.main.MainModel;
			import com.cc.core.constant.OptTypeConstant;
			
			private var refreshTime:Number;
			
			/** 刷新数据库基础缓存 */
			protected function refreshDBCache(event:MouseEvent):void
			{
				var date:Date = new Date();
				if (date.time - refreshTime < 1*1000) return;
				
				this.dispatchEvent(new DealDataEvent(DealDataEvent.REFRESH_BASE_CACHE,OptTypeConstant.DEAL_DATA_1));	
				refreshTime = new Date().time;
			}
			
			/** 刷新基础配置缓存 */
			protected function refreshConfigCache(event:MouseEvent):void
			{
				var date:Date = new Date();
				if (date.time - refreshTime < 1*1000) return;
				
				this.dispatchEvent(new DealDataEvent(DealDataEvent.REFRESH_CONFIG_CACHE,OptTypeConstant.DEAL_DATA_2));	
				refreshTime = new Date().time;
			}
			
			/** 同步缓存数据 */
			private function synCacheData(event:MouseEvent):void {
				var date:Date = new Date();
				if (date.time - refreshTime < 1*1000) return;
				
				this.dispatchEvent(new DealDataEvent(DealDataEvent.SYN_CACHE_DATA,OptTypeConstant.DEAL_DATA_3));	
				refreshTime = new Date().time;
			}
			
			/** 热更新 */
			private function hotUpdateClass(event:MouseEvent):void {
				var date:Date = new Date();
				if (date.time - refreshTime < 1*1000) return;
				
				this.dispatchEvent(new DealDataEvent(DealDataEvent.HOT_UPDATE_CLASS,OptTypeConstant.DEAL_DATA_8));	
				refreshTime = new Date().time;
			}
			
			/** 停服维护*/
			private function stopServer(event:MouseEvent):void {
				var date:Date = new Date();
				if (date.time - refreshTime < 1*1000) return;
				
				this.dispatchEvent(new DealDataEvent(DealDataEvent.STOP_SERVER,{stopMin:stopMin.text,endStopMin:endStopMin.text}));	
				refreshTime = new Date().time;
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<s:Button id="refreshBaseCacheBtn" x="32" y="50" height="32" width="150" label="刷新数据库基础缓存" 
			  fontSize="14" click="refreshDBCache(event)" />
	<s:Button id="refreshConfigCacheBtn" x="32" y="100" height="32" width="150" label="刷新基础配置缓存" 
			  fontSize="14" click="refreshConfigCache(event)" />
	
	<s:Button id="synCacheDataBtn" x="32" y="160" width="200" height="32" label="同步缓存数据到数据库"
			  click="synCacheData(event)" color="#ED1111" fontSize="16"  />
	
	<s:Button id="hotUpdateClassBtn" x="32" y="210" width="200" height="32" label="热更新class文件"
			  click="hotUpdateClass(event)" color="#ED1111" fontSize="16"  />
	
	<s:Label x="32" y="270" width="200" height="32" fontSize="18" text="服务器将在" />
	<s:TextInput id="stopMin" x="122" y="270" width="50" height="32" fontSize="16"  textAlign="center"/>
	<s:Label x="172" y="270" width="200" height="32" fontSize="18" text="分钟后停服维护，维护" />
	<s:TextInput id="endStopMin" x="352" y="270" width="50" height="32" fontSize="16"  textAlign="center"/>
	<s:Label x="402" y="270" width="200" height="32" fontSize="18" text="分钟。" />
	
	<s:Button id="stopServerBtn" x="452" y="270" width="120" height="32" label="停服维护"
			  click="stopServer(event)" color="#ED1111" fontSize="16"  />
	
	<s:Label x="32" y="0" width="250" height="45" color="#F03908" fontSize="20" text="非管理员请勿操作"
			 textAlign="left" verticalAlign="middle"/>
	
</s:Group>
