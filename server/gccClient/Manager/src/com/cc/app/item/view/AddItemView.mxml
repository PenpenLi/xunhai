<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" width="622" height="430" title="物品列表" close="closeHandler()">
	<fx:Script>
		<![CDATA[
			import com.cc.app.item.event.ItemEvent;
			import com.cc.app.item.model.ItemModel;
			import com.cc.core.Globals;
			import com.cc.core.util.MessageUtil;
			
			import mx.collections.ArrayCollection;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			import mx.utils.StringUtil;
			
			import spark.events.GridEvent;
			
			public var myData:ArrayCollection = new ArrayCollection();
			
			[Bindable]
			public var types:ArrayCollection = new ArrayCollection([{type:0,typeName:"全部"},{type:1,typeName:"道具"},{type:2,typeName:"装备"}]);
			
			private function itemTypeDg_clickHandler(event:GridEvent):void
			{
				var dg:DataGrid = event.currentTarget as DataGrid;
				if(dg.selectedItem == null)return;
				this.getItemsByType(dg.selectedItem.type);
			}
			
			
			public var itemArr:Array;
			private function getItemsByType(type:int):void
			{
				myData.removeAll();
				itemArr = ItemModel.instance.itemConfList;
				var obj:Object;
				if(type == 0){
					for each(obj in itemArr){
						myData.addItem(obj);
					}
				}else if(type == 1){
					for each(obj in itemArr){
						if(obj.type > 1){
							myData.addItem(obj);
						}
					}
				}else if(type == 2){
					for each(obj in itemArr){
						if(obj.type == 1){
							myData.addItem(obj);
						}
					}
				}
				
				itemDG.dataProvider = myData;
			}
			
			private function closeHandler():void
			{
//				for each(var obj:Object in myData){
//					obj.checked = false;
//					obj.num = 0;
//				}
				
				PopUpManager.removePopUp(this);
			}
			
			private function sureBtn_clickHandler(event:MouseEvent):void
			{
				var ac:ArrayCollection = new ArrayCollection();
				
//				for each(var obj:Object in itemArr){
//					if(obj.checked){
//						ac.addItem(obj);
//					}
//				}
				
                var itemNum:int = 0;
				for each(var obj:Object in itemArr){
					if(obj.num != 0){
						ac.addItem(obj);
                        ++itemNum;
                        if (itemNum > 6) {
                            MessageUtil.showFaultMessage("最多只能同时发放6件物品！");
                            return;
                        }
					}
				}
                
				Globals.instance.context.dispatchEvent(new ItemEvent(ItemEvent.SEND_ITEM_LIST,ac));
				this.closeHandler();
			}
			
			private function checkBtn_clickHandler(event:MouseEvent):void
			{
				var items:Array = ItemModel.instance.itemConfList;
				var obj:Object;
				var ac:ArrayCollection = new ArrayCollection();
				if(itemIdRb.selected){
					//物品ID查询
					var itemID:int = int(textInput.text);
					for each(obj in items){
						if(obj.id == itemID){
							ac.addItem(obj);
						}
					}
					
					for each(obj in itemDG.dataProvider){
						obj.num = 0;
						obj.checked = false;
					}
					
					if(ac.length == 0){
						MessageUtil.showFaultMessage("没有ID为"+(textInput.text)+"的物品");
					}
				}
				
				if(itemRb.selected){
					//名称查询
					var itemName:String = StringUtil.trim(textInput.text);
//					var myPattern:RegExp = /+itemName+/g;
					for each(obj in items){
						var name:String = obj.name;
						if(name.indexOf(itemName) >= 0){
							ac.addItem(obj);
						}
					}
					
//					Globals.instance.context.dispatchEvent(new ItemEvent(ItemEvent.CHECK_ITEM_BYNAME,itemName));
				}
				
				itemDG.dataProvider = ac;
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	
	<s:Panel width="128" height="93%" dropShadowVisible="false">
		<s:DataGrid id="itemTypeDg" x="0" y="0" width="100%" dataProvider="{types}" requestedRowCount="4" gridClick="itemTypeDg_clickHandler(event)">
			<s:columns>
				<s:ArrayList>
					<s:GridColumn dataField="typeName" headerText="物品类型"></s:GridColumn>
				</s:ArrayList>
			</s:columns>
		</s:DataGrid>
	</s:Panel>
	
	<s:Panel x="135" width="100%" height="93%" dropShadowVisible="false">
		<s:DataGrid id="itemDG" x="0" y="0" width="100%" height="100%" requestedRowCount="4">
			<s:columns>
				<s:ArrayList>
					<s:GridColumn dataField="id" headerText="物品ID" width="104"></s:GridColumn>
					<s:GridColumn dataField="name" headerText="物品名称" width="104"></s:GridColumn>
					<s:GridColumn dataField="num" headerText="数量" width="104">
						<s:itemRenderer>  
							<fx:Component>  
								<s:GridItemRenderer>
									<fx:Script>
										<![CDATA[
											import spark.events.TextOperationEvent;
											
											override public function set data(value:Object):void{
												super.data = value;
												
												if(value != null){
													if(value.num <= 0){
														numTxt.text = "";
													}else{
														numTxt.text = value.num;
													}
												}
											}
											
											private function numTxt_changeHandler(event:TextOperationEvent):void
											{
												data.num = int(numTxt.text);
											}
											
										]]>
									</fx:Script>
								
									<s:TextInput x="2" y="1" id="numTxt" width="80" text="" maxChars="3" restrict="0-9" change="numTxt_changeHandler(event)" textAlign="center" color="0x000000"/>
								</s:GridItemRenderer>
							</fx:Component>  
						</s:itemRenderer>  
					</s:GridColumn>
			<!--		<s:GridColumn dataField="checked" headerText="操作">
						<s:itemRenderer>  
							<fx:Component>  
								<s:GridItemRenderer>
									<fx:Script>
										<![CDATA[
											import com.cc.core.util.MessageUtil;
											
											import mx.collections.ArrayCollection;
											import mx.events.FlexEvent;
											
											override public function set data(value:Object):void{
												super.data = value;
												
												if(value != null){
													cb.selected = value.checked;
												}
											}
											
											private function checkHandler(event:MouseEvent):void
											{
												if(data.num == 0){
													MessageUtil.showFaultMessage("请先填写物品数量");
													return;
												}
												
												data.checked = !data.checked;
												cb.selected = data.checked;
											}
											
											protected function cb_changeHandler(event:Event):void
											{
												if(data.num == 0){
													data.checked = false;
													cb.selected = data.checked;
												}
											}
											
										]]>
									</fx:Script>
									
									<s:HGroup y="2" width="104" horizontalAlign="center">
										<s:CheckBox id="cb" change="cb_changeHandler(event)" click="checkHandler(event)"/>
									</s:HGroup>  
								</s:GridItemRenderer>
							</fx:Component>  
						</s:itemRenderer>  
					</s:GridColumn>-->
				</s:ArrayList>
			</s:columns>
		</s:DataGrid>
		<s:Label x="67" y="-25" width="63" height="21" text="查询条件：" verticalAlign="middle"/>
		<s:RadioButton id="itemRb" x="134" y="-24" label="物品名称" selected="true" value="0"/>
		<s:RadioButton id="itemIdRb" x="210" y="-24" label="物品ID" selected="false" value="1"/>
		<s:TextInput id="textInput" x="274" y="-26"/>
		<s:Button id="checkBtn" x="408" y="-26" label="查询" click="checkBtn_clickHandler(event)"/>
	</s:Panel>
	<s:Button id="sureBtn" x="264" y="372" label="确定" click="sureBtn_clickHandler(event)"/>
	
</s:TitleWindow>
