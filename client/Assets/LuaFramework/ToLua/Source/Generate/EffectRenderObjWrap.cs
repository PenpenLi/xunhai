//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class EffectRenderObjWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(EffectRenderObj), typeof(Node));
		L.RegFunction("Release", Release);
		L.RegFunction("GetID", GetID);
		L.RegFunction("setStart", setStart);
		L.RegFunction("bindBone", bindBone);
		L.RegFunction("getKid", getKid);
		L.RegFunction("SetActive", SetActive);
		L.RegFunction("GetNode", GetNode);
		L.RegFunction("GetDes", GetDes);
		L.RegFunction("SetNcCurveDurationTime", SetNcCurveDurationTime);
		L.RegFunction("SetParticleSystemSize", SetParticleSystemSize);
		L.RegFunction("Update", Update);
		L.RegFunction("setLoop", setLoop);
		L.RegFunction("cheakPlay", cheakPlay);
		L.RegFunction("dispose", dispose);
		L.RegFunction("SetName", SetName);
		L.RegFunction("GetName", GetName);
		L.RegFunction("Create", Create);
		L.RegFunction("resetState", resetState);
		L.RegFunction("isStopedEffect", isStopedEffect);
		L.RegFunction("stop", stop);
		L.RegFunction("play", play);
		L.RegFunction("checkPlayComplete", checkPlayComplete);
		L.RegFunction("setSize", setSize);
		L.RegFunction("reSize", reSize);
		L.RegFunction("setLife", setLife);
		L.RegFunction("compareLife", compareLife);
		L.RegFunction("setSpeed", setSpeed);
		L.RegFunction("New", _CreateEffectRenderObj);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("effectObj", get_effectObj, set_effectObj);
		L.RegVar("effctName", get_effctName, null);
		L.RegVar("dead", get_dead, null);
		L.RegVar("autoDestroy", get_autoDestroy, set_autoDestroy);
		L.RegFunction("LoadComCallBack", EffectRenderObj_LoadComCallBack);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateEffectRenderObj(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 1);
				EffectRenderObj obj = new EffectRenderObj(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: EffectRenderObj.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Release(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			EffectRenderObj obj = (EffectRenderObj)ToLua.CheckObject(L, 1, typeof(EffectRenderObj));
			obj.Release();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetID(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			EffectRenderObj obj = (EffectRenderObj)ToLua.CheckObject(L, 1, typeof(EffectRenderObj));
			uint o = obj.GetID();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setStart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			EffectRenderObj obj = (EffectRenderObj)ToLua.CheckObject(L, 1, typeof(EffectRenderObj));
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.setStart(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int bindBone(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			EffectRenderObj obj = (EffectRenderObj)ToLua.CheckObject(L, 1, typeof(EffectRenderObj));
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.GameObject arg1 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 3, typeof(UnityEngine.GameObject));
			UnityEngine.Vector3 arg2 = ToLua.ToVector3(L, 4);
			obj.bindBone(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getKid(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			EffectRenderObj obj = (EffectRenderObj)ToLua.CheckObject(L, 1, typeof(EffectRenderObj));
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.GameObject arg1 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 3, typeof(UnityEngine.GameObject));
			UnityEngine.GameObject o = obj.getKid(arg0, arg1);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetActive(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			EffectRenderObj obj = (EffectRenderObj)ToLua.CheckObject(L, 1, typeof(EffectRenderObj));
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.GameObject));
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.SetActive(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetNode(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			EffectRenderObj obj = (EffectRenderObj)ToLua.CheckObject(L, 1, typeof(EffectRenderObj));
			Node o = obj.GetNode();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetDes(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			EffectRenderObj obj = (EffectRenderObj)ToLua.CheckObject(L, 1, typeof(EffectRenderObj));
			EffectObjectDescriptor o = obj.GetDes();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetNcCurveDurationTime(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			EffectRenderObj obj = (EffectRenderObj)ToLua.CheckObject(L, 1, typeof(EffectRenderObj));
			string arg0 = ToLua.CheckString(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			obj.SetNcCurveDurationTime(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetParticleSystemSize(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			EffectRenderObj obj = (EffectRenderObj)ToLua.CheckObject(L, 1, typeof(EffectRenderObj));
			string arg0 = ToLua.CheckString(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			obj.SetParticleSystemSize(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Update(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			EffectRenderObj obj = (EffectRenderObj)ToLua.CheckObject(L, 1, typeof(EffectRenderObj));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			bool o = obj.Update(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setLoop(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			EffectRenderObj obj = (EffectRenderObj)ToLua.CheckObject(L, 1, typeof(EffectRenderObj));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.setLoop(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int cheakPlay(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			EffectRenderObj obj = (EffectRenderObj)ToLua.CheckObject(L, 1, typeof(EffectRenderObj));
			bool o = obj.cheakPlay();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int dispose(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			EffectRenderObj obj = (EffectRenderObj)ToLua.CheckObject(L, 1, typeof(EffectRenderObj));
			obj.dispose();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetName(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			EffectRenderObj obj = (EffectRenderObj)ToLua.CheckObject(L, 1, typeof(EffectRenderObj));
			string arg0 = ToLua.CheckString(L, 2);
			obj.SetName(ref arg0);
			LuaDLL.lua_pushstring(L, arg0);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetName(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			EffectRenderObj obj = (EffectRenderObj)ToLua.CheckObject(L, 1, typeof(EffectRenderObj));
			string o = obj.GetName();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Create(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			EffectRenderObj obj = (EffectRenderObj)ToLua.CheckObject(L, 1, typeof(EffectRenderObj));
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			EffectRenderObj.LoadComCallBack arg2 = null;
			LuaTypes funcType4 = LuaDLL.lua_type(L, 4);

			if (funcType4 != LuaTypes.LUA_TFUNCTION)
			{
				 arg2 = (EffectRenderObj.LoadComCallBack)ToLua.CheckObject(L, 4, typeof(EffectRenderObj.LoadComCallBack));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 4);
				arg2 = DelegateFactory.CreateDelegate(typeof(EffectRenderObj.LoadComCallBack), func) as EffectRenderObj.LoadComCallBack;
			}

			bool o = obj.Create(ref arg0, ref arg1, arg2);
			LuaDLL.lua_pushboolean(L, o);
			LuaDLL.lua_pushstring(L, arg0);
			LuaDLL.lua_pushstring(L, arg1);
			return 3;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int resetState(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			EffectRenderObj obj = (EffectRenderObj)ToLua.CheckObject(L, 1, typeof(EffectRenderObj));
			obj.resetState();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int isStopedEffect(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			EffectRenderObj obj = (EffectRenderObj)ToLua.CheckObject(L, 1, typeof(EffectRenderObj));
			bool o = obj.isStopedEffect();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int stop(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			EffectRenderObj obj = (EffectRenderObj)ToLua.CheckObject(L, 1, typeof(EffectRenderObj));
			obj.stop();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int play(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			EffectRenderObj obj = (EffectRenderObj)ToLua.CheckObject(L, 1, typeof(EffectRenderObj));
			obj.play();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int checkPlayComplete(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			EffectRenderObj obj = (EffectRenderObj)ToLua.CheckObject(L, 1, typeof(EffectRenderObj));
			bool o = obj.checkPlayComplete();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setSize(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			EffectRenderObj obj = (EffectRenderObj)ToLua.CheckObject(L, 1, typeof(EffectRenderObj));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.setSize(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int reSize(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			EffectRenderObj obj = (EffectRenderObj)ToLua.CheckObject(L, 1, typeof(EffectRenderObj));
			obj.reSize();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setLife(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			EffectRenderObj obj = (EffectRenderObj)ToLua.CheckObject(L, 1, typeof(EffectRenderObj));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.setLife(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int compareLife(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			EffectRenderObj obj = (EffectRenderObj)ToLua.CheckObject(L, 1, typeof(EffectRenderObj));
			obj.compareLife();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setSpeed(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			EffectRenderObj obj = (EffectRenderObj)ToLua.CheckObject(L, 1, typeof(EffectRenderObj));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.setSpeed(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_effectObj(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EffectRenderObj obj = (EffectRenderObj)o;
			UnityEngine.GameObject ret = obj.effectObj;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index effectObj on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_effctName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EffectRenderObj obj = (EffectRenderObj)o;
			string ret = obj.effctName;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index effctName on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_dead(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EffectRenderObj obj = (EffectRenderObj)o;
			bool ret = obj.dead;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index dead on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_autoDestroy(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EffectRenderObj obj = (EffectRenderObj)o;
			bool ret = obj.autoDestroy;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index autoDestroy on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_effectObj(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EffectRenderObj obj = (EffectRenderObj)o;
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.GameObject));
			obj.effectObj = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index effectObj on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_autoDestroy(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EffectRenderObj obj = (EffectRenderObj)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.autoDestroy = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index autoDestroy on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int EffectRenderObj_LoadComCallBack(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(EffectRenderObj.LoadComCallBack), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(EffectRenderObj.LoadComCallBack), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

