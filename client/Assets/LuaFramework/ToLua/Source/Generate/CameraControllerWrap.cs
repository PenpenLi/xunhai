//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class CameraControllerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(CameraController), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("SetCameraTest", SetCameraTest);
		L.RegFunction("SetCameraOffset", SetCameraOffset);
		L.RegFunction("pupdate", pupdate);
		L.RegFunction("SetFocusBossParam", SetFocusBossParam);
		L.RegFunction("StartFocusBoss", StartFocusBoss);
		L.RegFunction("StopFocusBoss", StopFocusBoss);
		L.RegFunction("NormalFollow", NormalFollow);
		L.RegFunction("BossCameraHandler2", BossCameraHandler2);
		L.RegFunction("GetDistance", GetDistance);
		L.RegFunction("getCenterCompute", getCenterCompute);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("paramA", get_paramA, set_paramA);
		L.RegVar("bossInnerDistance", get_bossInnerDistance, set_bossInnerDistance);
		L.RegVar("m_cameraPos", get_m_cameraPos, set_m_cameraPos);
		L.RegVar("followTarget", get_followTarget, set_followTarget);
		L.RegVar("boss", get_boss, set_boss);
		L.RegVar("m_fAngleX", get_m_fAngleX, set_m_fAngleX);
		L.RegVar("m_fAngleY", get_m_fAngleY, set_m_fAngleY);
		L.RegVar("m_InnerRing", get_m_InnerRing, set_m_InnerRing);
		L.RegVar("m_rotX_paraI", get_m_rotX_paraI, set_m_rotX_paraI);
		L.RegVar("m_rotX_paraII", get_m_rotX_paraII, set_m_rotX_paraII);
		L.RegVar("m_rotXMax", get_m_rotXMax, set_m_rotXMax);
		L.RegVar("m_scaleMinimum", get_m_scaleMinimum, set_m_scaleMinimum);
		L.RegVar("m_scaleMaxmum", get_m_scaleMaxmum, set_m_scaleMaxmum);
		L.RegVar("m_cameraScale_paraI", get_m_cameraScale_paraI, set_m_cameraScale_paraI);
		L.RegVar("m_cameraScale_paraII", get_m_cameraScale_paraII, set_m_cameraScale_paraII);
		L.RegVar("m_cTween_paraI", get_m_cTween_paraI, set_m_cTween_paraI);
		L.RegVar("m_cTween_paraII", get_m_cTween_paraII, set_m_cTween_paraII);
		L.RegVar("m_fDis", get_m_fDis, set_m_fDis);
		L.RegVar("wQDefaultDis", get_wQDefaultDis, set_wQDefaultDis);
		L.RegVar("nQDefaultDis", get_nQDefaultDis, set_nQDefaultDis);
		L.RegVar("wQMaxDis", get_wQMaxDis, set_wQMaxDis);
		L.RegVar("isTestFocus", get_isTestFocus, set_isTestFocus);
		L.RegVar("distanceScale", get_distanceScale, set_distanceScale);
		L.RegVar("focusHeight", get_focusHeight, set_focusHeight);
		L.RegVar("focusXRotation", get_focusXRotation, set_focusXRotation);
		L.RegVar("focusYRotation", get_focusYRotation, set_focusYRotation);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetCameraTest(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			CameraController obj = (CameraController)ToLua.CheckObject(L, 1, typeof(CameraController));
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.SetCameraTest(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetCameraOffset(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 21);
			CameraController obj = (CameraController)ToLua.CheckObject(L, 1, typeof(CameraController));
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			float arg4 = (float)LuaDLL.luaL_checknumber(L, 6);
			float arg5 = (float)LuaDLL.luaL_checknumber(L, 7);
			float arg6 = (float)LuaDLL.luaL_checknumber(L, 8);
			float arg7 = (float)LuaDLL.luaL_checknumber(L, 9);
			float arg8 = (float)LuaDLL.luaL_checknumber(L, 10);
			float arg9 = (float)LuaDLL.luaL_checknumber(L, 11);
			float arg10 = (float)LuaDLL.luaL_checknumber(L, 12);
			float arg11 = (float)LuaDLL.luaL_checknumber(L, 13);
			float arg12 = (float)LuaDLL.luaL_checknumber(L, 14);
			float arg13 = (float)LuaDLL.luaL_checknumber(L, 15);
			float arg14 = (float)LuaDLL.luaL_checknumber(L, 16);
			float arg15 = (float)LuaDLL.luaL_checknumber(L, 17);
			float arg16 = (float)LuaDLL.luaL_checknumber(L, 18);
			float arg17 = (float)LuaDLL.luaL_checknumber(L, 19);
			float arg18 = (float)LuaDLL.luaL_checknumber(L, 20);
			float arg19 = (float)LuaDLL.luaL_checknumber(L, 21);
			obj.SetCameraOffset(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12, arg13, arg14, arg15, arg16, arg17, arg18, arg19);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int pupdate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			CameraController obj = (CameraController)ToLua.CheckObject(L, 1, typeof(CameraController));
			obj.pupdate();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFocusBossParam(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			CameraController obj = (CameraController)ToLua.CheckObject(L, 1, typeof(CameraController));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			obj.SetFocusBossParam(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StartFocusBoss(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			CameraController obj = (CameraController)ToLua.CheckObject(L, 1, typeof(CameraController));
			obj.StartFocusBoss();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StopFocusBoss(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			CameraController obj = (CameraController)ToLua.CheckObject(L, 1, typeof(CameraController));
			obj.StopFocusBoss();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int NormalFollow(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			CameraController obj = (CameraController)ToLua.CheckObject(L, 1, typeof(CameraController));
			obj.NormalFollow();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BossCameraHandler2(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			CameraController obj = (CameraController)ToLua.CheckObject(L, 1, typeof(CameraController));
			obj.BossCameraHandler2();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetDistance(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			CameraController obj = (CameraController)ToLua.CheckObject(L, 1, typeof(CameraController));
			UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 2);
			UnityEngine.Vector2 arg1 = ToLua.ToVector2(L, 3);
			bool arg2 = LuaDLL.luaL_checkboolean(L, 4);
			float o = obj.GetDistance(ref arg0, ref arg1, arg2);
			LuaDLL.lua_pushnumber(L, o);
			ToLua.Push(L, arg0);
			ToLua.Push(L, arg1);
			return 3;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getCenterCompute(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 6);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 1);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg4 = (float)LuaDLL.luaL_checknumber(L, 5);
			float arg5 = (float)LuaDLL.luaL_checknumber(L, 6);
			UnityEngine.Vector3 o = CameraController.getCenterCompute(arg0, arg1, arg2, arg3, arg4, arg5);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_paramA(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			float ret = obj.paramA;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index paramA on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_bossInnerDistance(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			float ret = obj.bossInnerDistance;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index bossInnerDistance on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_cameraPos(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			UnityEngine.Vector3 ret = obj.m_cameraPos;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_cameraPos on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_followTarget(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			UnityEngine.Transform ret = obj.followTarget;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index followTarget on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_boss(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			UnityEngine.Transform ret = obj.boss;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index boss on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_fAngleX(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			float ret = obj.m_fAngleX;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_fAngleX on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_fAngleY(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			float ret = obj.m_fAngleY;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_fAngleY on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_InnerRing(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			float ret = obj.m_InnerRing;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_InnerRing on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_rotX_paraI(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			float ret = obj.m_rotX_paraI;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_rotX_paraI on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_rotX_paraII(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			float ret = obj.m_rotX_paraII;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_rotX_paraII on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_rotXMax(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			float ret = obj.m_rotXMax;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_rotXMax on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_scaleMinimum(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			float ret = obj.m_scaleMinimum;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_scaleMinimum on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_scaleMaxmum(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			float ret = obj.m_scaleMaxmum;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_scaleMaxmum on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_cameraScale_paraI(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			float ret = obj.m_cameraScale_paraI;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_cameraScale_paraI on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_cameraScale_paraII(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			float ret = obj.m_cameraScale_paraII;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_cameraScale_paraII on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_cTween_paraI(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			float ret = obj.m_cTween_paraI;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_cTween_paraI on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_cTween_paraII(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			float ret = obj.m_cTween_paraII;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_cTween_paraII on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_fDis(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			float ret = obj.m_fDis;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_fDis on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_wQDefaultDis(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			float ret = obj.wQDefaultDis;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index wQDefaultDis on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_nQDefaultDis(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			float ret = obj.nQDefaultDis;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index nQDefaultDis on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_wQMaxDis(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			float ret = obj.wQMaxDis;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index wQMaxDis on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isTestFocus(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			bool ret = obj.isTestFocus;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index isTestFocus on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_distanceScale(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			float ret = obj.distanceScale;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index distanceScale on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_focusHeight(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			float ret = obj.focusHeight;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index focusHeight on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_focusXRotation(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			float ret = obj.focusXRotation;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index focusXRotation on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_focusYRotation(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			float ret = obj.focusYRotation;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index focusYRotation on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_paramA(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.paramA = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index paramA on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_bossInnerDistance(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.bossInnerDistance = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index bossInnerDistance on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_cameraPos(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.m_cameraPos = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_cameraPos on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_followTarget(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.Transform));
			obj.followTarget = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index followTarget on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_boss(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.Transform));
			obj.boss = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index boss on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_fAngleX(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.m_fAngleX = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_fAngleX on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_fAngleY(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.m_fAngleY = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_fAngleY on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_InnerRing(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.m_InnerRing = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_InnerRing on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_rotX_paraI(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.m_rotX_paraI = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_rotX_paraI on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_rotX_paraII(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.m_rotX_paraII = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_rotX_paraII on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_rotXMax(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.m_rotXMax = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_rotXMax on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_scaleMinimum(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.m_scaleMinimum = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_scaleMinimum on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_scaleMaxmum(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.m_scaleMaxmum = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_scaleMaxmum on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_cameraScale_paraI(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.m_cameraScale_paraI = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_cameraScale_paraI on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_cameraScale_paraII(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.m_cameraScale_paraII = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_cameraScale_paraII on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_cTween_paraI(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.m_cTween_paraI = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_cTween_paraI on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_cTween_paraII(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.m_cTween_paraII = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_cTween_paraII on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_fDis(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.m_fDis = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index m_fDis on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_wQDefaultDis(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.wQDefaultDis = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index wQDefaultDis on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_nQDefaultDis(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.nQDefaultDis = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index nQDefaultDis on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_wQMaxDis(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.wQMaxDis = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index wQMaxDis on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_isTestFocus(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.isTestFocus = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index isTestFocus on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_distanceScale(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.distanceScale = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index distanceScale on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_focusHeight(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.focusHeight = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index focusHeight on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_focusXRotation(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.focusXRotation = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index focusXRotation on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_focusYRotation(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CameraController obj = (CameraController)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.focusYRotation = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index focusYRotation on a nil value" : e.Message);
		}
	}
}

