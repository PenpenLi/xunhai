//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class GSpriteWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(GSprite), typeof(FairyGUI.GLoader));
		L.RegFunction("New", _CreateGSprite);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("isLoadFromAssetBundles", get_isLoadFromAssetBundles, set_isLoadFromAssetBundles);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateGSprite(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				GSprite obj = new GSprite();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: GSprite.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isLoadFromAssetBundles(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GSprite obj = (GSprite)o;
			bool ret = obj.isLoadFromAssetBundles;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index isLoadFromAssetBundles on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_isLoadFromAssetBundles(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GSprite obj = (GSprite)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.isLoadFromAssetBundles = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index isLoadFromAssetBundles on a nil value" : e.Message);
		}
	}
}

