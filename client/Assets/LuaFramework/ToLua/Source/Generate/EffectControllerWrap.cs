//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class EffectControllerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(EffectController), typeof(System.Object));
		L.RegFunction("Release", Release);
		L.RegFunction("play", play);
		L.RegFunction("stop", stop);
		L.RegFunction("checkPlayComplete", checkPlayComplete);
		L.RegFunction("setSpeed", setSpeed);
		L.RegFunction("setSize", setSize);
		L.RegFunction("reSize", reSize);
		L.RegFunction("compareLife", compareLife);
		L.RegFunction("New", _CreateEffectController);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("timeCount", get_timeCount, set_timeCount);
		L.RegVar("checkType", get_checkType, set_checkType);
		L.RegVar("eod", get_eod, set_eod);
		L.RegVar("lifeTime", get_lifeTime, set_lifeTime);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateEffectController(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				EffectRenderObj arg0 = (EffectRenderObj)ToLua.CheckObject(L, 1, typeof(EffectRenderObj));
				EffectController obj = new EffectController(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: EffectController.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Release(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			EffectController obj = (EffectController)ToLua.CheckObject(L, 1, typeof(EffectController));
			obj.Release();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int play(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			EffectController obj = (EffectController)ToLua.CheckObject(L, 1, typeof(EffectController));
			obj.play();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int stop(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			EffectController obj = (EffectController)ToLua.CheckObject(L, 1, typeof(EffectController));
			obj.stop();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int checkPlayComplete(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			EffectController obj = (EffectController)ToLua.CheckObject(L, 1, typeof(EffectController));
			bool o = obj.checkPlayComplete();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setSpeed(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			EffectController obj = (EffectController)ToLua.CheckObject(L, 1, typeof(EffectController));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.setSpeed(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setSize(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			EffectController obj = (EffectController)ToLua.CheckObject(L, 1, typeof(EffectController));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.setSize(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int reSize(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			EffectController obj = (EffectController)ToLua.CheckObject(L, 1, typeof(EffectController));
			obj.reSize();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int compareLife(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			EffectController obj = (EffectController)ToLua.CheckObject(L, 1, typeof(EffectController));
			obj.compareLife();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_timeCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EffectController obj = (EffectController)o;
			float ret = obj.timeCount;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index timeCount on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_checkType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EffectController obj = (EffectController)o;
			int ret = obj.checkType;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index checkType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_eod(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EffectController obj = (EffectController)o;
			EffectObjectDescriptor ret = obj.eod;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index eod on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_lifeTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EffectController obj = (EffectController)o;
			float ret = obj.lifeTime;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index lifeTime on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_timeCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EffectController obj = (EffectController)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.timeCount = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index timeCount on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_checkType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EffectController obj = (EffectController)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.checkType = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index checkType on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_eod(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EffectController obj = (EffectController)o;
			EffectObjectDescriptor arg0 = (EffectObjectDescriptor)ToLua.CheckObject(L, 2, typeof(EffectObjectDescriptor));
			obj.eod = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index eod on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_lifeTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EffectController obj = (EffectController)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.lifeTime = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index lifeTime on a nil value" : e.Message);
		}
	}
}

