//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class EffectRenderObjManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(EffectRenderObjManager), typeof(System.Object));
		L.RegFunction("Instance", Instance);
		L.RegFunction("CreateRenderObj", CreateRenderObj);
		L.RegFunction("RemoveRenderobj", RemoveRenderobj);
		L.RegFunction("Update", Update);
		L.RegFunction("ClearPool", ClearPool);
		L.RegFunction("Release", Release);
		L.RegFunction("New", _CreateEffectRenderObjManager);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("effectPack", get_effectPack, set_effectPack);
		L.RegVar("effectPool", get_effectPool, set_effectPool);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateEffectRenderObjManager(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				EffectRenderObjManager obj = new EffectRenderObjManager();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: EffectRenderObjManager.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Instance(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			EffectRenderObjManager o = EffectRenderObjManager.Instance();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateRenderObj(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			EffectRenderObjManager obj = (EffectRenderObjManager)ToLua.CheckObject(L, 1, typeof(EffectRenderObjManager));
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			bool arg2 = LuaDLL.luaL_checkboolean(L, 4);
			EffectRenderObj o = obj.CreateRenderObj(ref arg0, ref arg1, arg2);
			ToLua.PushObject(L, o);
			LuaDLL.lua_pushstring(L, arg0);
			LuaDLL.lua_pushstring(L, arg1);
			return 3;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveRenderobj(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			EffectRenderObjManager obj = (EffectRenderObjManager)ToLua.CheckObject(L, 1, typeof(EffectRenderObjManager));
			EffectRenderObj arg0 = (EffectRenderObj)ToLua.CheckObject(L, 2, typeof(EffectRenderObj));
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.RemoveRenderobj(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Update(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			EffectRenderObjManager obj = (EffectRenderObjManager)ToLua.CheckObject(L, 1, typeof(EffectRenderObjManager));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.Update(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearPool(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			EffectRenderObjManager obj = (EffectRenderObjManager)ToLua.CheckObject(L, 1, typeof(EffectRenderObjManager));
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.ClearPool(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Release(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			EffectRenderObjManager obj = (EffectRenderObjManager)ToLua.CheckObject(L, 1, typeof(EffectRenderObjManager));
			obj.Release();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_effectPack(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, EffectRenderObjManager.effectPack);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_effectPool(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EffectRenderObjManager obj = (EffectRenderObjManager)o;
			EffectPool ret = obj.effectPool;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index effectPool on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_effectPack(IntPtr L)
	{
		try
		{
			System.Collections.Generic.Dictionary<string,string> arg0 = (System.Collections.Generic.Dictionary<string,string>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.Dictionary<string,string>));
			EffectRenderObjManager.effectPack = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_effectPool(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			EffectRenderObjManager obj = (EffectRenderObjManager)o;
			EffectPool arg0 = (EffectPool)ToLua.CheckObject(L, 2, typeof(EffectPool));
			obj.effectPool = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index effectPool on a nil value" : e.Message);
		}
	}
}

